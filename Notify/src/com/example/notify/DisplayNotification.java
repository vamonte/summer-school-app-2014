package com.example.notify;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import org.apache.http.Header;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.support.v7.app.ActionBarActivity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Adapter;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.AsyncHttpResponseHandler;
import com.loopj.android.http.RequestParams;
import com.parse.FindCallback;
import com.parse.Parse;
import com.parse.ParseAnalytics;
import com.parse.ParseException;
import com.parse.ParseInstallation;
import com.parse.ParseObject;
import com.parse.ParseQuery;
import com.parse.PushService;

public class DisplayNotification extends ActionBarActivity {
	
	public int nrOfMsgs;
	public List<ParseObject> notifications;

	// some variables for the dynamic ListView
	private ListView lv;
	private ArrayList<String> als;
	private ArrayAdapter<String> adapter;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_display_notification);
		lv = (ListView) findViewById(R.id.lv_notifications);

		AsyncHttpClient client = new AsyncHttpClient();
		RequestParams params = new RequestParams();
		client.get("http://172.17.36.39:8080/notifications", params, new AsyncHttpResponseHandler(){
	
			@Override
			public void onFailure(int arg0, Header[] arg1, byte[] arg2,
					Throwable arg3) {
				Toast.makeText(getApplicationContext(), "Network error", Toast.LENGTH_LONG).show();	
			}
	
			@Override
			public void onSuccess(int arg0, Header[] arg1, byte[] response) {
				try {
					JSONObject obj = new JSONObject(new String(response));
					JSONArray notifications = obj.getJSONArray("notifications");
					als = new ArrayList<String>();
					for (int i = 0; i < notifications.length(); i++) {
						  JSONObject notification = notifications.getJSONObject(i);
						  JSONObject fields = notification.getJSONObject("fields");
						  String text = fields.getString("text");
						  String date = fields.getString("date");
						  String user = fields.getString("user");
						  String composition = (text + " // from " + user + " // sent on " + date).toString();
						  als.add(composition);
						}
					adapter = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_list_item_1, als);
					lv.setAdapter(adapter);
					
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					//e.printStackTrace();
					Toast.makeText(getApplicationContext(), e.toString(), Toast.LENGTH_LONG).show();
				}
			}
			
		});
	// Create Message Button --> hidden because with the Action Bar Menu it's no longer needed
//		Button btn_create = (Button) findViewById(R.id.btn_create);
//		btn_create.setOnClickListener (new View.OnClickListener() {
//			public void onClick(View v) {
//				Intent i = new Intent(getApplicationContext(),SendNotification.class);
//		        startActivity(i);
//		        }
//		 	});	
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.display_notification, menu);
		return true;
	}

	// original autogenerated code
//	@Override
//	public boolean onOptionsItemSelected(MenuItem item) {
//		// Handle action bar item clicks here. The action bar will
//		// automatically handle clicks on the Home/Up button, so long
//		// as you specify a parent activity in AndroidManifest.xml.
//		int id = item.getItemId();
//		if (id == R.id.action_settings) {
//			return true;
//		}
//		return super.onOptionsItemSelected(item);
//	}
	
	@Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle presses on the action bar items
        switch (item.getItemId()) {
            case R.id.action_edit:
                openEdit();
                return true;
            case R.id.action_log:
                openLog();
                return true;
//            case R.id.action_settings:
//                openSettings();
//                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
    
    // methods for the Icons in the Action Bar
    public void openEdit(){
    	Intent i = new Intent(getApplicationContext(),SendNotification.class);
        startActivity(i);
    }
    
    public void openLog(){
    	Intent i = new Intent(getApplicationContext(),DisplayNotification.class);
        startActivity(i);
    }
    
    // method to check if there is an internet connection available
    public static boolean getConnectivityStatus(Context context) {
	    ConnectivityManager cm = (ConnectivityManager) context
	            .getSystemService(Context.CONNECTIVITY_SERVICE);
	 
	    NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
	    if (null != activeNetwork) {
	    	return true;
	    }
	    return false;
	}
}
