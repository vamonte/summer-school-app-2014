package com.example.notify;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import android.support.v7.app.ActionBarActivity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Adapter;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import com.parse.FindCallback;
import com.parse.Parse;
import com.parse.ParseAnalytics;
import com.parse.ParseException;
import com.parse.ParseInstallation;
import com.parse.ParseObject;
import com.parse.ParseQuery;
import com.parse.PushService;

public class DisplayNotification extends ActionBarActivity {
	
	public int nrOfMsgs;
	public List<ParseObject> notifications;

	// some variables for the dynamic ListView
	private ListView lv;
	private ArrayList<String> als;
	private ArrayAdapter<String> adapter;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_display_notification);

	// setup Parse
    Parse.initialize(this, "yMpYNZXO0j1CwyAdC8VCSNiCaDJ7D9gSFzaNVNnm", "OVzuZXDpu9kcNGzkDYIAMoRvURgQ0M4oY40Zbx1e");
	PushService.setDefaultPushCallback(this, DisplayNotification.class);
	
	//TODO check if internet connection is available?!?
	// if(getConnectivityStatus(getApplicationContext()))
	
	ParseQuery<ParseObject> query = ParseQuery.getQuery("Notification");
	query.orderByDescending("createdAt");
	query.setLimit(100); // limits the max number of notifications being displayed
	query.findInBackground(new FindCallback<ParseObject>() {
		@Override
		public void done(List<ParseObject> notifyList, ParseException e) {
			if (e == null) {
	            Log.d("Notification List", "Retrieved " + notifyList.size() + " messages");
	            
	            // pass data into variables that the UiThread can access
				nrOfMsgs = notifyList.size();
	            notifications = notifyList;
	            
	            // call UI Thread to display the data
	            runOnUiThread(new java.lang.Runnable() {
					
					@Override
					public void run() {
						
						if (notifications != null){
        				
        				// create ListView, following tutorial on https://www.youtube.com/watch?v=tNoeFkXCZ6w
        				// all content needs to be gathered into one string called "composition"
        				lv = (ListView) findViewById(R.id.lv_notifications);
        				als = new ArrayList<String>();
        				
        				for (ParseObject obj : notifications) {
			                   String name = (String)obj.get("name");
			                   String message = (String)obj.get("message");
			                   String date = (String)obj.get("date");
			                   String composition = (message + " // from " + name + " // sent on " + date).toString();
			                   als.add(composition);
        				}
        				
        				adapter = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_list_item_1, als);
        				lv.setAdapter(adapter);
        				
						}
						
        				// if notification = null --> no messages displayed
						// TODO find a way to save messages in local storage
						else {
						Toast toast = Toast.makeText(getApplicationContext(), "There are no messages", Toast.LENGTH_LONG);
        				toast.show();
					} 
					}
				});
	            
	            
	        } else {
	            Log.d("messages", "Error: " + e.getMessage());
	        }
		}
	});
			
	// Create Message Button --> hidden because with the Action Bar Menu it's no longer needed
//		Button btn_create = (Button) findViewById(R.id.btn_create);
//		btn_create.setOnClickListener (new View.OnClickListener() {
//			public void onClick(View v) {
//				Intent i = new Intent(getApplicationContext(),SendNotification.class);
//		        startActivity(i);
//		        }
//		 	});	
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.display_notification, menu);
		return true;
	}

	// original autogenerated code
//	@Override
//	public boolean onOptionsItemSelected(MenuItem item) {
//		// Handle action bar item clicks here. The action bar will
//		// automatically handle clicks on the Home/Up button, so long
//		// as you specify a parent activity in AndroidManifest.xml.
//		int id = item.getItemId();
//		if (id == R.id.action_settings) {
//			return true;
//		}
//		return super.onOptionsItemSelected(item);
//	}
	
	@Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle presses on the action bar items
        switch (item.getItemId()) {
            case R.id.action_edit:
                openEdit();
                return true;
            case R.id.action_log:
                openLog();
                return true;
//            case R.id.action_settings:
//                openSettings();
//                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
    
    // methods for the Icons in the Action Bar
    public void openEdit(){
    	Intent i = new Intent(getApplicationContext(),SendNotification.class);
        startActivity(i);
    }
    
    public void openLog(){
    	Intent i = new Intent(getApplicationContext(),DisplayNotification.class);
        startActivity(i);
    }
    
    // method to check if there is an internet connection available
    public static boolean getConnectivityStatus(Context context) {
	    ConnectivityManager cm = (ConnectivityManager) context
	            .getSystemService(Context.CONNECTIVITY_SERVICE);
	 
	    NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
	    if (null != activeNetwork) {
	    	return true;
	    }
	    return false;
	}
}
